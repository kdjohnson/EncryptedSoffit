buildscript {
	ext {
		springBootVersion = '1.4.2.RELEASE'
	}
	repositories {
		maven {
			url "https://maven.oakland.edu/nexus/content/groups/public"
			name "nexus"
		}
		mavenLocal()
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

plugins {
	id "com.moowork.node" version "0.13"
	id "net.linguica.maven-settings" version "0.5"
}

apply plugin: 'java'
apply plugin: 'eclipse-wtp'
apply plugin: 'org.springframework.boot'
apply plugin: 'war'
apply plugin: 'maven'
apply plugin: 'com.moowork.node'


node {
	// Version of node to use.
	version = '7.2.0'
	// Version of npm to use.
	npmVersion = '4.0.2'
	// Base URL for fetching node distributions (change if you have a mirror).
	distBaseUrl = 'https://nodejs.org/dist'
	// If true, it will download node using above parameters.
	// If false, it will try to use globally installed node.
	download = true
	// Set the work directory for unpacking node
	workDir = file("${project.buildDir}/nodejs")
	// Set the work directory where node_modules should be located
	nodeModulesDir = file("src/main/react")
}

task runBuild(type: NpmTask) {
	args = ['run', 'build']
}
task copyTask(type: Copy) {
	from 'src/main/react/build/static/'
	into 'src/main/webapp/'
}

clean.finalizedBy(npmInstall)
npmInstall.finalizedBy(runBuild)
runBuild.finalizedBy(copyTask)


war {
	baseName = 'testEncrypt'
	version = '0.0.1-SNAPSHOT'
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
	mavenLocal()
	mavenCentral()
}

configurations {
	providedRuntime
}

dependencies {
	compile ('org.apereo.portal:uPortal-soffit-renderer:4.3.1')
	compile('org.springframework.boot:spring-boot-starter-web')
	providedRuntime('org.springframework.boot:spring-boot-starter-tomcat')
	providedRuntime('org.apache.tomcat.embed:tomcat-embed-jasper')
	testCompile('org.springframework.boot:spring-boot-starter-test')
}
